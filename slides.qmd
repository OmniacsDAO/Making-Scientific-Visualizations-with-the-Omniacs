---
title: "Breadth-First Search (BFS)"
format: revealjs
jupyter: python3
theme: simple
highlight-style: github
---

## What is BFS?

- **BFS** (Breadth-First Search) is a graph traversal algorithm.
- It explores all neighbors of a node before going deeper.
- Uses a **queue** (FIFO) to track nodes to visit.
- Ideal for finding the **shortest path** in unweighted graphs.

---

## BFS Python Implementation

```{python}
from collections import deque

def bfs(graph, start):
    visited = set()
    queue = deque([start])
    
    while queue:
        node = queue.popleft()
        if node not in visited:
            print(node, end=" ")
            visited.add(node)
            queue.extend(neighbor for neighbor in graph[node] if neighbor not in visited)

# Example graph (Adjacency List)
graph = {
    'A': ['B', 'C'],
    'B': ['D', 'E'],
    'C': ['F'],
    'D': [],
    'E': ['F'],
    'F': []
}

